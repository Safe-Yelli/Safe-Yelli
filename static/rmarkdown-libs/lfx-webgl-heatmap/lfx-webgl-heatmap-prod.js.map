{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/leaflet-webgl-heatmap/dist/leaflet-webgl-heatmap.min.js","webpack:///./node_modules/webgl-heatmap/webgl-heatmap.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","L","WebGLHeatMap","Renderer","extend","version","options","size","units","opacity","gradientTexture","alphaRange","padding","_initContainer","t","this","_container","DomUtil","create","id","Util","stamp","style","position","gl","window","createWebGLHeatmap","canvas","console","error","clear","update","multiply","addPoint","display","adjustSize","onAdd","resize","_destroyContainer","remove","DomEvent","off","getEvents","move","throttle","_update","_map","getSize","width","x","height","y","draw","reposition","_getMapPanePos","multiplyBy","setPosition","e","data","length","a","Math","floor","bind","_multiply","h","latLng","latLngToContainerPoint","_scalem","cos","PI","lat","LatLng","lng","latLngToLayerPoint","max","round","_scalepx","addDataPoint","push","setData","webGLHeatmap","Framebuffer","Heights","Node","Shader","Texture","WebGLHeatmap","fragmentShaderBlit","textureFloatShims","vertexShaderBlit","__indexOf","indexOf","item","checkColorBuffer","checkFloatLinear","checkSupport","checkTexture","createSourceCanvas","getExtension","getSupportedExtensions","shimExtensions","shimLookup","unshimExtensions","unshimLookup","_i","_len","ctx","imageData","document","createElement","getContext","getImageData","set","Uint8ClampedArray","putImageData","sourceType","buffer","cleanup","fragmentShader","framebuffer","positionLoc","program","readBuffer","result","source","sourceCanvas","sourceLoc","target","vertexShader","vertices","createProgram","createShader","VERTEX_SHADER","attachShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","deleteShader","deleteProgram","deleteBuffer","deleteTexture","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","bindTexture","TEXTURE_2D","bindFramebuffer","FRAMEBUFFER","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","Float32Array","createBuffer","bufferData","STATIC_DRAW","getAttribLocation","getUniformLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform1i","drawArrays","TRIANGLES","Uint8Array","readPixels","abs","targetType","getError","check","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","halfFloatExt","halfFloatTexturing","singleFloatTexturing","_error","OES_texture_float","shim","WEBGL_color_buffer_float","RGBA32F_EXT","RGB32F_EXT","FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT","UNSIGNED_NORMALIZED_EXT","OES_texture_float_linear","OES_texture_half_float","HALF_FLOAT_OES","EXT_color_buffer_half_float","RGBA16F_EXT","RGB16F_EXT","OES_texture_half_float_linear","WebGLRenderingContext","extobj","extension","supported","_j","_k","_len1","_len2","getFloatExtension","spec","candidate","candidates","half","halfFramebuffer","halfLinear","halfTexture","importance","preference","single","singleFramebuffer","singleLinear","singleTexture","use","_l","_len3","_len4","_m","_ref","_ref1","_ref2","prefer","require","throws","texture","filterable","renderable","score","precision","type","pow","sort","b","join","vendorRe","vendors","match","vendor","nukeVendorPrefix","_arg","fragment","vertex","vs","fs","link","value_cache","uniform_cache","attribCache","attribLocation","location","shader","uniformLoc","int","loc","vec2","uniform2f","float","uniform1f","destroy","deleteFRamebuffer","unbind","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","color","handle","depth","framebufferRenderbuffer","DEPTH_ATTACHMENT","RENDERBUFFER","params","channels","toUpperCase","chancount","RGB","LUMINANCE_ALPHA","unit","activeTexture","TEXTURE0","setSize","upload","linear","nearest","NEAREST","clampToEdge","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","repeat","REPEAT","floatExt","fbo","end","heatmap","clampShader","multiplyShader","blurShader","nodeBack","nodeFront","vertexBuffer","vertexSize","maxPointCount","vertexBufferData","vertexBufferViews","bufferIndex","pointCount","intensityLoc","enable","BLEND","STREAM_DRAW","disableVertexAttribArray","disable","clearColor","COLOR_BUFFER_BIT","clamp","min","quad","swap","blur","tmp","addVertex","xs","ys","intensity","alphaEnd","alphaStart","getColorFun","image","intensityToAlpha","output","textureGradient","antialias","WebGLDebugUtils","log","makeDebugContext","err","funcName","args","glEnumToString","blendFunc","ONE","Image","onload","src","toFixed","offsetWidth","offsetHeight","viewport","heights","canvasHeight","canvasWidth","addPoints","items","_results"],"mappings":"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","file":"lfx-webgl-heatmap-prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*\n * MIT Copyright 2016 Ursudio <info@ursudio.com>\n * http://www.ursudio.com/\n * Please attribute Ursudio in any production associated with this JavaScript plugin.\n */\nL.WebGLHeatMap=L.Renderer.extend({version:\"0.2.7\",options:{size:3e4,units:\"m\",opacity:1,gradientTexture:!1,alphaRange:1,padding:0},_initContainer:function(){var t=this._container=L.DomUtil.create(\"canvas\",\"leaflet-zoom-animated\"),i=this.options;t.id=\"webgl-leaflet-\"+L.Util.stamp(this),t.style.opacity=i.opacity,t.style.position=\"absolute\";try{this.gl=window.createWebGLHeatmap({canvas:t,gradientTexture:i.gradientTexture,alphaRange:[0,i.alphaRange]})}catch(t){console.error(t),this.gl={clear:function(){},update:function(){},multiply:function(){},addPoint:function(){},display:function(){},adjustSize:function(){}}}this._container=t},onAdd:function(){this.size=this.options.size,L.Renderer.prototype.onAdd.call(this),this.resize()},_destroyContainer:function(){delete this.gl,L.DomUtil.remove(this._container),L.DomEvent.off(this._container),delete this._container},getEvents:function(){var t=L.Renderer.prototype.getEvents.call(this);return L.Util.extend(t,{resize:this.resize,move:L.Util.throttle(this._update,49,this)}),t},resize:function(){var t=this._container,i=this._map.getSize();t.width=i.x,t.height=i.y,this.gl.adjustSize(),this.draw()},reposition:function(){var t=this._map._getMapPanePos().multiplyBy(-1);L.DomUtil.setPosition(this._container,t)},_update:function(){L.Renderer.prototype._update.call(this),this.draw()},draw:function(){var t=this._map,i=this.gl,e=this.data,n=e.length,a=Math.floor,o=this[\"_scale\"+this.options.units].bind(this),s=this._multiply;if(t){if(i.clear(),this.reposition(),n){for(var r=0;r<n;r++){var l=e[r],h=L.latLng(l),d=t.latLngToContainerPoint(h);i.addPoint(a(d.x),a(d.y),o(h),l[2])}i.update(),s&&(i.multiply(s),i.update())}i.display()}},_scalem:function(t){var i=this._map,e=this.size/40075017*360/Math.cos(Math.PI/180*t.lat),n=new L.LatLng(t.lat,t.lng-e),a=i.latLngToLayerPoint(t),o=i.latLngToLayerPoint(n);return Math.max(Math.round(a.x-o.x),1)},_scalepx:function(){return this.size},data:[],addDataPoint:function(t,i,e){this.data.push([t,i,e/100])},setData:function(t){this.data=t,this._multiply=null,this.draw()},clear:function(){this.setData([])},multiply:function(t){this._multiply=t,this.draw()}}),L.webGLHeatmap=function(t){return new L.WebGLHeatMap(t)};","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Framebuffer, Heights, Node, Shader, Texture, WebGLHeatmap, fragmentShaderBlit, nukeVendorPrefix, textureFloatShims, vertexShaderBlit,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  nukeVendorPrefix = function() {\n    var getExtension, getSupportedExtensions, vendorRe, vendors;\n    if (window.WebGLRenderingContext != null) {\n      vendors = ['WEBKIT', 'MOZ', 'MS', 'O'];\n      vendorRe = /^WEBKIT_(.*)|MOZ_(.*)|MS_(.*)|O_(.*)/;\n      getExtension = WebGLRenderingContext.prototype.getExtension;\n      WebGLRenderingContext.prototype.getExtension = function(name) {\n        var extobj, match, vendor, _i, _len;\n        match = name.match(vendorRe);\n        if (match !== null) {\n          name = match[1];\n        }\n        extobj = getExtension.call(this, name);\n        if (extobj === null) {\n          for (_i = 0, _len = vendors.length; _i < _len; _i++) {\n            vendor = vendors[_i];\n            extobj = getExtension.call(this, vendor + '_' + name);\n            if (extobj !== null) {\n              return extobj;\n            }\n          }\n          return null;\n        } else {\n          return extobj;\n        }\n      };\n      getSupportedExtensions = WebGLRenderingContext.prototype.getSupportedExtensions;\n      return WebGLRenderingContext.prototype.getSupportedExtensions = function() {\n        var extension, match, result, supported, _i, _len;\n        supported = getSupportedExtensions.call(this);\n        result = [];\n        for (_i = 0, _len = supported.length; _i < _len; _i++) {\n          extension = supported[_i];\n          match = extension.match(vendorRe);\n          if (match !== null) {\n            extension = match[1];\n          }\n          if (__indexOf.call(result, extension) < 0) {\n            result.push(extension);\n          }\n        }\n        return result;\n      };\n    }\n  };\n\n  textureFloatShims = function() {\n    var checkColorBuffer, checkFloatLinear, checkSupport, checkTexture, createSourceCanvas, getExtension, getSupportedExtensions, name, shimExtensions, shimLookup, unshimExtensions, unshimLookup, _i, _len;\n    createSourceCanvas = function() {\n      var canvas, ctx, imageData;\n      canvas = document.createElement('canvas');\n      canvas.width = 2;\n      canvas.height = 2;\n      ctx = canvas.getContext('2d');\n      imageData = ctx.getImageData(0, 0, 2, 2);\n      imageData.data.set(new Uint8ClampedArray([0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255]));\n      ctx.putImageData(imageData, 0, 0);\n      return canvas;\n    };\n    createSourceCanvas();\n    checkFloatLinear = function(gl, sourceType) {\n      var buffer, cleanup, fragmentShader, framebuffer, positionLoc, program, readBuffer, result, source, sourceCanvas, sourceLoc, target, vertexShader, vertices;\n      program = gl.createProgram();\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      gl.attachShader(program, vertexShader);\n      gl.shaderSource(vertexShader, 'attribute vec2 position;\\nvoid main(){\\n    gl_Position = vec4(position, 0.0, 1.0);\\n}');\n      gl.compileShader(vertexShader);\n      if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n        throw gl.getShaderInfoLog(vertexShader);\n      }\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      gl.attachShader(program, fragmentShader);\n      gl.shaderSource(fragmentShader, 'uniform sampler2D source;\\nvoid main(){\\n    gl_FragColor = texture2D(source, vec2(1.0, 1.0));\\n}');\n      gl.compileShader(fragmentShader);\n      if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n        throw gl.getShaderInfoLog(fragmentShader);\n      }\n      gl.linkProgram(program);\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        throw gl.getProgramInfoLog(program);\n      }\n      gl.useProgram(program);\n      cleanup = function() {\n        gl.deleteShader(fragmentShader);\n        gl.deleteShader(vertexShader);\n        gl.deleteProgram(program);\n        gl.deleteBuffer(buffer);\n        gl.deleteTexture(source);\n        gl.deleteTexture(target);\n        gl.deleteFramebuffer(framebuffer);\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.useProgram(null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      };\n      target = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, target);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 2, 2, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, target, 0);\n      sourceCanvas = createSourceCanvas();\n      source = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, source);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, sourceType, sourceCanvas);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      vertices = new Float32Array([1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1]);\n      buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n      positionLoc = gl.getAttribLocation(program, 'position');\n      sourceLoc = gl.getUniformLocation(program, 'source');\n      gl.enableVertexAttribArray(positionLoc);\n      gl.vertexAttribPointer(positionLoc, 2, gl.FLOAT, false, 0, 0);\n      gl.uniform1i(sourceLoc, 0);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n      readBuffer = new Uint8Array(4 * 4);\n      gl.readPixels(0, 0, 2, 2, gl.RGBA, gl.UNSIGNED_BYTE, readBuffer);\n      result = Math.abs(readBuffer[0] - 127) < 10;\n      cleanup();\n      return result;\n    };\n    checkTexture = function(gl, targetType) {\n      var target;\n      target = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, target);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 2, 2, 0, gl.RGBA, targetType, null);\n      if (gl.getError() === 0) {\n        gl.deleteTexture(target);\n        return true;\n      } else {\n        gl.deleteTexture(target);\n        return false;\n      }\n    };\n    checkColorBuffer = function(gl, targetType) {\n      var check, framebuffer, target;\n      target = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, target);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 2, 2, 0, gl.RGBA, targetType, null);\n      framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, target, 0);\n      check = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n      gl.deleteTexture(target);\n      gl.deleteFramebuffer(framebuffer);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      if (check === gl.FRAMEBUFFER_COMPLETE) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    shimExtensions = [];\n    shimLookup = {};\n    unshimExtensions = [];\n    checkSupport = function() {\n      var canvas, extobj, gl, halfFloatExt, halfFloatTexturing, singleFloatExt, singleFloatTexturing;\n      canvas = document.createElement('canvas');\n      gl = null;\n      try {\n        gl = canvas.getContext('experimental-webgl');\n        if (gl === null) {\n          gl = canvas.getContext('webgl');\n        }\n      } catch (_error) {}\n      if (gl != null) {\n        singleFloatExt = gl.getExtension('OES_texture_float');\n        if (singleFloatExt === null) {\n          if (checkTexture(gl, gl.FLOAT)) {\n            singleFloatTexturing = true;\n            shimExtensions.push('OES_texture_float');\n            shimLookup.OES_texture_float = {\n              shim: true\n            };\n          } else {\n            singleFloatTexturing = false;\n            unshimExtensions.push('OES_texture_float');\n          }\n        } else {\n          if (checkTexture(gl, gl.FLOAT)) {\n            singleFloatTexturing = true;\n            shimExtensions.push('OES_texture_float');\n          } else {\n            singleFloatTexturing = false;\n            unshimExtensions.push('OES_texture_float');\n          }\n        }\n        if (singleFloatTexturing) {\n          extobj = gl.getExtension('WEBGL_color_buffer_float');\n          if (extobj === null) {\n            if (checkColorBuffer(gl, gl.FLOAT)) {\n              shimExtensions.push('WEBGL_color_buffer_float');\n              shimLookup.WEBGL_color_buffer_float = {\n                shim: true,\n                RGBA32F_EXT: 0x8814,\n                RGB32F_EXT: 0x8815,\n                FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211,\n                UNSIGNED_NORMALIZED_EXT: 0x8C17\n              };\n            } else {\n              unshimExtensions.push('WEBGL_color_buffer_float');\n            }\n          } else {\n            if (checkColorBuffer(gl, gl.FLOAT)) {\n              shimExtensions.push('WEBGL_color_buffer_float');\n            } else {\n              unshimExtensions.push('WEBGL_color_buffer_float');\n            }\n          }\n          extobj = gl.getExtension('OES_texture_float_linear');\n          if (extobj === null) {\n            if (checkFloatLinear(gl, gl.FLOAT)) {\n              shimExtensions.push('OES_texture_float_linear');\n              shimLookup.OES_texture_float_linear = {\n                shim: true\n              };\n            } else {\n              unshimExtensions.push('OES_texture_float_linear');\n            }\n          } else {\n            if (checkFloatLinear(gl, gl.FLOAT)) {\n              shimExtensions.push('OES_texture_float_linear');\n            } else {\n              unshimExtensions.push('OES_texture_float_linear');\n            }\n          }\n        }\n        halfFloatExt = gl.getExtension('OES_texture_half_float');\n        if (halfFloatExt === null) {\n          if (checkTexture(gl, 0x8D61)) {\n            halfFloatTexturing = true;\n            shimExtensions.push('OES_texture_half_float');\n            halfFloatExt = shimLookup.OES_texture_half_float = {\n              HALF_FLOAT_OES: 0x8D61,\n              shim: true\n            };\n          } else {\n            halfFloatTexturing = false;\n            unshimExtensions.push('OES_texture_half_float');\n          }\n        } else {\n          if (checkTexture(gl, halfFloatExt.HALF_FLOAT_OES)) {\n            halfFloatTexturing = true;\n            shimExtensions.push('OES_texture_half_float');\n          } else {\n            halfFloatTexturing = false;\n            unshimExtensions.push('OES_texture_half_float');\n          }\n        }\n        if (halfFloatTexturing) {\n          extobj = gl.getExtension('EXT_color_buffer_half_float');\n          if (extobj === null) {\n            if (checkColorBuffer(gl, halfFloatExt.HALF_FLOAT_OES)) {\n              shimExtensions.push('EXT_color_buffer_half_float');\n              shimLookup.EXT_color_buffer_half_float = {\n                shim: true,\n                RGBA16F_EXT: 0x881A,\n                RGB16F_EXT: 0x881B,\n                FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211,\n                UNSIGNED_NORMALIZED_EXT: 0x8C17\n              };\n            } else {\n              unshimExtensions.push('EXT_color_buffer_half_float');\n            }\n          } else {\n            if (checkColorBuffer(gl, halfFloatExt.HALF_FLOAT_OES)) {\n              shimExtensions.push('EXT_color_buffer_half_float');\n            } else {\n              unshimExtensions.push('EXT_color_buffer_half_float');\n            }\n          }\n          extobj = gl.getExtension('OES_texture_half_float_linear');\n          if (extobj === null) {\n            if (checkFloatLinear(gl, halfFloatExt.HALF_FLOAT_OES)) {\n              shimExtensions.push('OES_texture_half_float_linear');\n              return shimLookup.OES_texture_half_float_linear = {\n                shim: true\n              };\n            } else {\n              return unshimExtensions.push('OES_texture_half_float_linear');\n            }\n          } else {\n            if (checkFloatLinear(gl, halfFloatExt.HALF_FLOAT_OES)) {\n              return shimExtensions.push('OES_texture_half_float_linear');\n            } else {\n              return unshimExtensions.push('OES_texture_half_float_linear');\n            }\n          }\n        }\n      }\n    };\n    if (window.WebGLRenderingContext != null) {\n      checkSupport();\n      unshimLookup = {};\n      for (_i = 0, _len = unshimExtensions.length; _i < _len; _i++) {\n        name = unshimExtensions[_i];\n        unshimLookup[name] = true;\n      }\n      getExtension = WebGLRenderingContext.prototype.getExtension;\n      WebGLRenderingContext.prototype.getExtension = function(name) {\n        var extobj;\n        extobj = shimLookup[name];\n        if (extobj === void 0) {\n          if (unshimLookup[name]) {\n            return null;\n          } else {\n            return getExtension.call(this, name);\n          }\n        } else {\n          return extobj;\n        }\n      };\n      getSupportedExtensions = WebGLRenderingContext.prototype.getSupportedExtensions;\n      WebGLRenderingContext.prototype.getSupportedExtensions = function() {\n        var extension, result, supported, _j, _k, _len1, _len2;\n        supported = getSupportedExtensions.call(this);\n        result = [];\n        for (_j = 0, _len1 = supported.length; _j < _len1; _j++) {\n          extension = supported[_j];\n          if (unshimLookup[extension] === void 0) {\n            result.push(extension);\n          }\n        }\n        for (_k = 0, _len2 = shimExtensions.length; _k < _len2; _k++) {\n          extension = shimExtensions[_k];\n          if (__indexOf.call(result, extension) < 0) {\n            result.push(extension);\n          }\n        }\n        return result;\n      };\n      return WebGLRenderingContext.prototype.getFloatExtension = function(spec) {\n        var candidate, candidates, half, halfFramebuffer, halfLinear, halfTexture, i, importance, preference, result, single, singleFramebuffer, singleLinear, singleTexture, use, _j, _k, _l, _len1, _len2, _len3, _len4, _m, _ref, _ref1, _ref2;\n        if (spec.prefer == null) {\n          spec.prefer = ['half'];\n        }\n        if (spec.require == null) {\n          spec.require = [];\n        }\n        if (spec.throws == null) {\n          spec.throws = true;\n        }\n        singleTexture = this.getExtension('OES_texture_float');\n        halfTexture = this.getExtension('OES_texture_half_float');\n        singleFramebuffer = this.getExtension('WEBGL_color_buffer_float');\n        halfFramebuffer = this.getExtension('EXT_color_buffer_half_float');\n        singleLinear = this.getExtension('OES_texture_float_linear');\n        halfLinear = this.getExtension('OES_texture_half_float_linear');\n        single = {\n          texture: singleTexture !== null,\n          filterable: singleLinear !== null,\n          renderable: singleFramebuffer !== null,\n          score: 0,\n          precision: 'single',\n          half: false,\n          single: true,\n          type: this.FLOAT\n        };\n        half = {\n          texture: halfTexture !== null,\n          filterable: halfLinear !== null,\n          renderable: halfFramebuffer !== null,\n          score: 0,\n          precision: 'half',\n          half: true,\n          single: false,\n          type: (_ref = halfTexture != null ? halfTexture.HALF_FLOAT_OES : void 0) != null ? _ref : null\n        };\n        candidates = [];\n        if (single.texture) {\n          candidates.push(single);\n        }\n        if (half.texture) {\n          candidates.push(half);\n        }\n        result = [];\n        for (_j = 0, _len1 = candidates.length; _j < _len1; _j++) {\n          candidate = candidates[_j];\n          use = true;\n          _ref1 = spec.require;\n          for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {\n            name = _ref1[_k];\n            if (candidate[name] === false) {\n              use = false;\n            }\n          }\n          if (use) {\n            result.push(candidate);\n          }\n        }\n        for (_l = 0, _len3 = result.length; _l < _len3; _l++) {\n          candidate = result[_l];\n          _ref2 = spec.prefer;\n          for (i = _m = 0, _len4 = _ref2.length; _m < _len4; i = ++_m) {\n            preference = _ref2[i];\n            importance = Math.pow(2, spec.prefer.length - i - 1);\n            if (candidate[preference]) {\n              candidate.score += importance;\n            }\n          }\n        }\n        result.sort(function(a, b) {\n          if (a.score === b.score) {\n            return 0;\n          } else if (a.score < b.score) {\n            return 1;\n          } else if (a.score > b.score) {\n            return -1;\n          }\n        });\n        if (result.length === 0) {\n          if (spec.throws) {\n            throw 'No floating point texture support that is ' + spec.require.join(', ');\n          } else {\n            return null;\n          }\n        } else {\n          result = result[0];\n          return {\n            filterable: result.filterable,\n            renderable: result.renderable,\n            type: result.type,\n            precision: result.precision\n          };\n        }\n      };\n    }\n  };\n\n  nukeVendorPrefix();\n\n  textureFloatShims();\n\n  Shader = (function() {\n    function Shader(gl, _arg) {\n      var fragment, vertex;\n      this.gl = gl;\n      vertex = _arg.vertex, fragment = _arg.fragment;\n      this.program = this.gl.createProgram();\n      this.vs = this.gl.createShader(this.gl.VERTEX_SHADER);\n      this.fs = this.gl.createShader(this.gl.FRAGMENT_SHADER);\n      this.gl.attachShader(this.program, this.vs);\n      this.gl.attachShader(this.program, this.fs);\n      this.compileShader(this.vs, vertex);\n      this.compileShader(this.fs, fragment);\n      this.link();\n      this.value_cache = {};\n      this.uniform_cache = {};\n      this.attribCache = {};\n    }\n\n    Shader.prototype.attribLocation = function(name) {\n      var location;\n      location = this.attribCache[name];\n      if (location === void 0) {\n        location = this.attribCache[name] = this.gl.getAttribLocation(this.program, name);\n      }\n      return location;\n    };\n\n    Shader.prototype.compileShader = function(shader, source) {\n      this.gl.shaderSource(shader, source);\n      this.gl.compileShader(shader);\n      if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n        throw \"Shader Compile Error: \" + (this.gl.getShaderInfoLog(shader));\n      }\n    };\n\n    Shader.prototype.link = function() {\n      this.gl.linkProgram(this.program);\n      if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\n        throw \"Shader Link Error: \" + (this.gl.getProgramInfoLog(this.program));\n      }\n    };\n\n    Shader.prototype.use = function() {\n      this.gl.useProgram(this.program);\n      return this;\n    };\n\n    Shader.prototype.uniformLoc = function(name) {\n      var location;\n      location = this.uniform_cache[name];\n      if (location === void 0) {\n        location = this.uniform_cache[name] = this.gl.getUniformLocation(this.program, name);\n      }\n      return location;\n    };\n\n    Shader.prototype.int = function(name, value) {\n      var cached, loc;\n      cached = this.value_cache[name];\n      if (cached !== value) {\n        this.value_cache[name] = value;\n        loc = this.uniformLoc(name);\n        if (loc) {\n          this.gl.uniform1i(loc, value);\n        }\n      }\n      return this;\n    };\n\n    Shader.prototype.vec2 = function(name, a, b) {\n      var loc;\n      loc = this.uniformLoc(name);\n      if (loc) {\n        this.gl.uniform2f(loc, a, b);\n      }\n      return this;\n    };\n\n    Shader.prototype.float = function(name, value) {\n      var cached, loc;\n      cached = this.value_cache[name];\n      if (cached !== value) {\n        this.value_cache[name] = value;\n        loc = this.uniformLoc(name);\n        if (loc) {\n          this.gl.uniform1f(loc, value);\n        }\n      }\n      return this;\n    };\n\n    return Shader;\n\n  })();\n\n  Framebuffer = (function() {\n    function Framebuffer(gl) {\n      this.gl = gl;\n      this.buffer = this.gl.createFramebuffer();\n    }\n\n    Framebuffer.prototype.destroy = function() {\n      return this.gl.deleteFRamebuffer(this.buffer);\n    };\n\n    Framebuffer.prototype.bind = function() {\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.buffer);\n      return this;\n    };\n\n    Framebuffer.prototype.unbind = function() {\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\n      return this;\n    };\n\n    Framebuffer.prototype.check = function() {\n      var result;\n      result = this.gl.checkFramebufferStatus(this.gl.FRAMEBUFFER);\n      switch (result) {\n        case this.gl.FRAMEBUFFER_UNSUPPORTED:\n          throw 'Framebuffer is unsupported';\n          break;\n        case this.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n          throw 'Framebuffer incomplete attachment';\n          break;\n        case this.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n          throw 'Framebuffer incomplete dimensions';\n          break;\n        case this.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n          throw 'Framebuffer incomplete missing attachment';\n      }\n      return this;\n    };\n\n    Framebuffer.prototype.color = function(texture) {\n      this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, texture.target, texture.handle, 0);\n      this.check();\n      return this;\n    };\n\n    Framebuffer.prototype.depth = function(buffer) {\n      this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, buffer.id);\n      this.check();\n      return this;\n    };\n\n    Framebuffer.prototype.destroy = function() {\n      return this.gl.deleteFramebuffer(this.buffer);\n    };\n\n    return Framebuffer;\n\n  })();\n\n  Texture = (function() {\n    function Texture(gl, params) {\n      var _ref, _ref1;\n      this.gl = gl;\n      if (params == null) {\n        params = {};\n      }\n      this.channels = this.gl[((_ref = params.channels) != null ? _ref : 'rgba').toUpperCase()];\n      if (typeof params.type === 'number') {\n        this.type = params.type;\n      } else {\n        this.type = this.gl[((_ref1 = params.type) != null ? _ref1 : 'unsigned_byte').toUpperCase()];\n      }\n      switch (this.channels) {\n        case this.gl.RGBA:\n          this.chancount = 4;\n          break;\n        case this.gl.RGB:\n          this.chancount = 3;\n          break;\n        case this.gl.LUMINANCE_ALPHA:\n          this.chancount = 2;\n          break;\n        default:\n          this.chancount = 1;\n      }\n      this.target = this.gl.TEXTURE_2D;\n      this.handle = this.gl.createTexture();\n    }\n\n    Texture.prototype.destroy = function() {\n      return this.gl.deleteTexture(this.handle);\n    };\n\n    Texture.prototype.bind = function(unit) {\n      if (unit == null) {\n        unit = 0;\n      }\n      if (unit > 15) {\n        throw 'Texture unit too large: ' + unit;\n      }\n      this.gl.activeTexture(this.gl.TEXTURE0 + unit);\n      this.gl.bindTexture(this.target, this.handle);\n      return this;\n    };\n\n    Texture.prototype.setSize = function(width, height) {\n      this.width = width;\n      this.height = height;\n      this.gl.texImage2D(this.target, 0, this.channels, this.width, this.height, 0, this.channels, this.type, null);\n      return this;\n    };\n\n    Texture.prototype.upload = function(data) {\n      this.width = data.width;\n      this.height = data.height;\n      this.gl.texImage2D(this.target, 0, this.channels, this.channels, this.type, data);\n      return this;\n    };\n\n    Texture.prototype.linear = function() {\n      this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n      this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);\n      return this;\n    };\n\n    Texture.prototype.nearest = function() {\n      this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\n      this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\n      return this;\n    };\n\n    Texture.prototype.clampToEdge = function() {\n      this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n      return this;\n    };\n\n    Texture.prototype.repeat = function() {\n      this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.gl.REPEAT);\n      this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.gl.REPEAT);\n      return this;\n    };\n\n    return Texture;\n\n  })();\n\n  Node = (function() {\n    function Node(gl, width, height) {\n      var floatExt;\n      this.gl = gl;\n      this.width = width;\n      this.height = height;\n      floatExt = this.gl.getFloatExtension({\n        require: ['renderable']\n      });\n      this.texture = new Texture(this.gl, {\n        type: floatExt.type\n      }).bind(0).setSize(this.width, this.height).nearest().clampToEdge();\n      this.fbo = new Framebuffer(this.gl).bind().color(this.texture).unbind();\n    }\n\n    Node.prototype.use = function() {\n      return this.fbo.bind();\n    };\n\n    Node.prototype.bind = function(unit) {\n      return this.texture.bind(unit);\n    };\n\n    Node.prototype.end = function() {\n      return this.fbo.unbind();\n    };\n\n    Node.prototype.resize = function(width, height) {\n      this.width = width;\n      this.height = height;\n      return this.texture.bind(0).setSize(this.width, this.height);\n    };\n\n    return Node;\n\n  })();\n\n  vertexShaderBlit = 'attribute vec4 position;\\nvarying vec2 texcoord;\\nvoid main(){\\n    texcoord = position.xy*0.5+0.5;\\n    gl_Position = position;\\n}';\n\n  fragmentShaderBlit = '#ifdef GL_FRAGMENT_PRECISION_HIGH\\n    precision highp int;\\n    precision highp float;\\n#else\\n    precision mediump int;\\n    precision mediump float;\\n#endif\\nuniform sampler2D source;\\nvarying vec2 texcoord;';\n\n  Heights = (function() {\n    function Heights(heatmap, gl, width, height) {\n      var i, _i, _ref;\n      this.heatmap = heatmap;\n      this.gl = gl;\n      this.width = width;\n      this.height = height;\n      this.shader = new Shader(this.gl, {\n        vertex: 'attribute vec4 position, intensity;\\nvarying vec2 off, dim;\\nvarying float vIntensity;\\nuniform vec2 viewport;\\n\\nvoid main(){\\n    dim = abs(position.zw);\\n    off = position.zw;\\n    vec2 pos = position.xy + position.zw;\\n    vIntensity = intensity.x;\\n    gl_Position = vec4((pos/viewport)*2.0-1.0, 0.0, 1.0);\\n}',\n        fragment: '#ifdef GL_FRAGMENT_PRECISION_HIGH\\n    precision highp int;\\n    precision highp float;\\n#else\\n    precision mediump int;\\n    precision mediump float;\\n#endif\\nvarying vec2 off, dim;\\nvarying float vIntensity;\\nvoid main(){\\n    float falloff = (1.0 - smoothstep(0.0, 1.0, length(off/dim)));\\n    float intensity = falloff*vIntensity;\\n    gl_FragColor = vec4(intensity);\\n}'\n      });\n      this.clampShader = new Shader(this.gl, {\n        vertex: vertexShaderBlit,\n        fragment: fragmentShaderBlit + 'uniform float low, high;\\nvoid main(){\\n    gl_FragColor = vec4(clamp(texture2D(source, texcoord).rgb, low, high), 1.0);\\n}'\n      });\n      this.multiplyShader = new Shader(this.gl, {\n        vertex: vertexShaderBlit,\n        fragment: fragmentShaderBlit + 'uniform float value;\\nvoid main(){\\n    gl_FragColor = vec4(texture2D(source, texcoord).rgb*value, 1.0);\\n}'\n      });\n      this.blurShader = new Shader(this.gl, {\n        vertex: vertexShaderBlit,\n        fragment: fragmentShaderBlit + 'uniform vec2 viewport;\\nvoid main(){\\n    vec4 result = vec4(0.0);\\n    for(int x=-1; x<=1; x++){\\n        for(int y=-1; y<=1; y++){\\n            vec2 off = vec2(x,y)/viewport;\\n            //float factor = 1.0 - smoothstep(0.0, 1.5, length(off));\\n            float factor = 1.0;\\n            result += vec4(texture2D(source, texcoord+off).rgb*factor, factor);\\n        }\\n    }\\n    gl_FragColor = vec4(result.rgb/result.w, 1.0);\\n}'\n      });\n      this.nodeBack = new Node(this.gl, this.width, this.height);\n      this.nodeFront = new Node(this.gl, this.width, this.height);\n      this.vertexBuffer = this.gl.createBuffer();\n      this.vertexSize = 8;\n      this.maxPointCount = 1024 * 10;\n      this.vertexBufferData = new Float32Array(this.maxPointCount * this.vertexSize * 6);\n      this.vertexBufferViews = [];\n      for (i = _i = 0, _ref = this.maxPointCount; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        this.vertexBufferViews.push(new Float32Array(this.vertexBufferData.buffer, 0, i * this.vertexSize * 6));\n      }\n      this.bufferIndex = 0;\n      this.pointCount = 0;\n    }\n\n    Heights.prototype.resize = function(width, height) {\n      this.width = width;\n      this.height = height;\n      this.nodeBack.resize(this.width, this.height);\n      return this.nodeFront.resize(this.width, this.height);\n    };\n\n    Heights.prototype.update = function() {\n      var intensityLoc, positionLoc;\n      if (this.pointCount > 0) {\n        this.gl.enable(this.gl.BLEND);\n        this.nodeFront.use();\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertexBufferViews[this.pointCount], this.gl.STREAM_DRAW);\n        positionLoc = this.shader.attribLocation('position');\n        intensityLoc = this.shader.attribLocation('intensity');\n        this.gl.enableVertexAttribArray(1);\n        this.gl.vertexAttribPointer(positionLoc, 4, this.gl.FLOAT, false, 8 * 4, 0 * 4);\n        this.gl.vertexAttribPointer(intensityLoc, 4, this.gl.FLOAT, false, 8 * 4, 4 * 4);\n        this.shader.use().vec2('viewport', this.width, this.height);\n        this.gl.drawArrays(this.gl.TRIANGLES, 0, this.pointCount * 6);\n        this.gl.disableVertexAttribArray(1);\n        this.pointCount = 0;\n        this.bufferIndex = 0;\n        this.nodeFront.end();\n        return this.gl.disable(this.gl.BLEND);\n      }\n    };\n\n    Heights.prototype.clear = function() {\n      this.nodeFront.use();\n      this.gl.clearColor(0, 0, 0, 1);\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n      return this.nodeFront.end();\n    };\n\n    Heights.prototype.clamp = function(min, max) {\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);\n      this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n      this.nodeFront.bind(0);\n      this.nodeBack.use();\n      this.clampShader.use().int('source', 0).float('low', min).float('high', max);\n      this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n      this.nodeBack.end();\n      return this.swap();\n    };\n\n    Heights.prototype.multiply = function(value) {\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);\n      this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n      this.nodeFront.bind(0);\n      this.nodeBack.use();\n      this.multiplyShader.use().int('source', 0).float('value', value);\n      this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n      this.nodeBack.end();\n      return this.swap();\n    };\n\n    Heights.prototype.blur = function() {\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);\n      this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n      this.nodeFront.bind(0);\n      this.nodeBack.use();\n      this.blurShader.use().int('source', 0).vec2('viewport', this.width, this.height);\n      this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n      this.nodeBack.end();\n      return this.swap();\n    };\n\n    Heights.prototype.swap = function() {\n      var tmp;\n      tmp = this.nodeFront;\n      this.nodeFront = this.nodeBack;\n      return this.nodeBack = tmp;\n    };\n\n    Heights.prototype.addVertex = function(x, y, xs, ys, intensity) {\n      this.vertexBufferData[this.bufferIndex++] = x;\n      this.vertexBufferData[this.bufferIndex++] = y;\n      this.vertexBufferData[this.bufferIndex++] = xs;\n      this.vertexBufferData[this.bufferIndex++] = ys;\n      this.vertexBufferData[this.bufferIndex++] = intensity;\n      this.vertexBufferData[this.bufferIndex++] = intensity;\n      this.vertexBufferData[this.bufferIndex++] = intensity;\n      return this.vertexBufferData[this.bufferIndex++] = intensity;\n    };\n\n    Heights.prototype.addPoint = function(x, y, size, intensity) {\n      var s;\n      if (size == null) {\n        size = 50;\n      }\n      if (intensity == null) {\n        intensity = 0.2;\n      }\n      if (this.pointCount >= this.maxPointCount - 1) {\n        this.update();\n      }\n      y = this.height - y;\n      s = size / 2;\n      this.addVertex(x, y, -s, -s, intensity);\n      this.addVertex(x, y, +s, -s, intensity);\n      this.addVertex(x, y, -s, +s, intensity);\n      this.addVertex(x, y, -s, +s, intensity);\n      this.addVertex(x, y, +s, -s, intensity);\n      this.addVertex(x, y, +s, +s, intensity);\n      return this.pointCount += 1;\n    };\n\n    return Heights;\n\n  })();\n\n  WebGLHeatmap = (function() {\n    function WebGLHeatmap(_arg) {\n      var alphaEnd, alphaRange, alphaStart, error, getColorFun, gradientTexture, image, intensityToAlpha, output, quad, textureGradient, _ref, _ref1;\n      _ref = _arg != null ? _arg : {}, this.canvas = _ref.canvas, this.width = _ref.width, this.height = _ref.height, intensityToAlpha = _ref.intensityToAlpha, gradientTexture = _ref.gradientTexture, alphaRange = _ref.alphaRange;\n      if (!this.canvas) {\n        this.canvas = document.createElement('canvas');\n      }\n      try {\n        this.gl = this.canvas.getContext('experimental-webgl', {\n          depth: false,\n          antialias: false\n        });\n        if (this.gl === null) {\n          this.gl = this.canvas.getContext('webgl', {\n            depth: false,\n            antialias: false\n          });\n          if (this.gl === null) {\n            throw 'WebGL not supported';\n          }\n        }\n      } catch (_error) {\n        error = _error;\n        throw 'WebGL not supported';\n      }\n      if (window.WebGLDebugUtils != null) {\n        console.log('debugging mode');\n        this.gl = WebGLDebugUtils.makeDebugContext(this.gl, function(err, funcName, args) {\n          throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to: \" + funcName;\n        });\n      }\n      this.gl.enableVertexAttribArray(0);\n      this.gl.blendFunc(this.gl.ONE, this.gl.ONE);\n      if (gradientTexture) {\n        textureGradient = this.gradientTexture = new Texture(this.gl, {\n          channels: 'rgba'\n        }).bind(0).setSize(2, 2).nearest().clampToEdge();\n        if (typeof gradientTexture === 'string') {\n          image = new Image();\n          image.onload = function() {\n            return textureGradient.bind().upload(image);\n          };\n          image.src = gradientTexture;\n        } else {\n          if (gradientTexture.width > 0 && gradientTexture.height > 0) {\n            textureGradient.upload(gradientTexture);\n          } else {\n            gradientTexture.onload = function() {\n              return textureGradient.upload(gradientTexture);\n            };\n          }\n        }\n        getColorFun = 'uniform sampler2D gradientTexture;\\nvec3 getColor(float intensity){\\n    return texture2D(gradientTexture, vec2(intensity, 0.0)).rgb;\\n}';\n      } else {\n        textureGradient = null;\n        getColorFun = 'vec3 getColor(float intensity){\\n    vec3 blue = vec3(0.0, 0.0, 1.0);\\n    vec3 cyan = vec3(0.0, 1.0, 1.0);\\n    vec3 green = vec3(0.0, 1.0, 0.0);\\n    vec3 yellow = vec3(1.0, 1.0, 0.0);\\n    vec3 red = vec3(1.0, 0.0, 0.0);\\n\\n    vec3 color = (\\n        fade(-0.25, 0.25, intensity)*blue +\\n        fade(0.0, 0.5, intensity)*cyan +\\n        fade(0.25, 0.75, intensity)*green +\\n        fade(0.5, 1.0, intensity)*yellow +\\n        smoothstep(0.75, 1.0, intensity)*red\\n    );\\n    return color;\\n}';\n      }\n      if (intensityToAlpha == null) {\n        intensityToAlpha = true;\n      }\n      if (intensityToAlpha) {\n        _ref1 = alphaRange != null ? alphaRange : [0, 1], alphaStart = _ref1[0], alphaEnd = _ref1[1];\n        output = \"vec4 alphaFun(vec3 color, float intensity){\\n    float alpha = smoothstep(\" + (alphaStart.toFixed(8)) + \", \" + (alphaEnd.toFixed(8)) + \", intensity);\\n    return vec4(color*alpha, alpha);\\n}\";\n      } else {\n        output = 'vec4 alphaFun(vec3 color, float intensity){\\n    return vec4(color, 1.0);\\n}';\n      }\n      this.shader = new Shader(this.gl, {\n        vertex: vertexShaderBlit,\n        fragment: fragmentShaderBlit + (\"float linstep(float low, float high, float value){\\n    return clamp((value-low)/(high-low), 0.0, 1.0);\\n}\\n\\nfloat fade(float low, float high, float value){\\n    float mid = (low+high)*0.5;\\n    float range = (high-low)*0.5;\\n    float x = 1.0 - clamp(abs(mid-value)/range, 0.0, 1.0);\\n    return smoothstep(0.0, 1.0, x);\\n}\\n\\n\" + getColorFun + \"\\n\" + output + \"\\n\\nvoid main(){\\n    float intensity = smoothstep(0.0, 1.0, texture2D(source, texcoord).r);\\n    vec3 color = getColor(intensity);\\n    gl_FragColor = alphaFun(color, intensity);\\n}\")\n      });\n      if (this.width == null) {\n        this.width = this.canvas.offsetWidth || 2;\n      }\n      if (this.height == null) {\n        this.height = this.canvas.offsetHeight || 2;\n      }\n      this.canvas.width = this.width;\n      this.canvas.height = this.height;\n      this.gl.viewport(0, 0, this.width, this.height);\n      this.quad = this.gl.createBuffer();\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.quad);\n      quad = new Float32Array([-1, -1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, 1, 0, 1, 1, -1, 0, 1, 1, 1, 0, 1]);\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, quad, this.gl.STATIC_DRAW);\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);\n      this.heights = new Heights(this, this.gl, this.width, this.height);\n    }\n\n    WebGLHeatmap.prototype.adjustSize = function() {\n      var canvasHeight, canvasWidth;\n      canvasWidth = this.canvas.offsetWidth || 2;\n      canvasHeight = this.canvas.offsetHeight || 2;\n      if (this.width !== canvasWidth || this.height !== canvasHeight) {\n        this.gl.viewport(0, 0, canvasWidth, canvasHeight);\n        this.canvas.width = canvasWidth;\n        this.canvas.height = canvasHeight;\n        this.width = canvasWidth;\n        this.height = canvasHeight;\n        return this.heights.resize(this.width, this.height);\n      }\n    };\n\n    WebGLHeatmap.prototype.display = function() {\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.quad);\n      this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);\n      this.heights.nodeFront.bind(0);\n      if (this.gradientTexture) {\n        this.gradientTexture.bind(1);\n      }\n      this.shader.use().int('source', 0).int('gradientTexture', 1);\n      return this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);\n    };\n\n    WebGLHeatmap.prototype.update = function() {\n      return this.heights.update();\n    };\n\n    WebGLHeatmap.prototype.clear = function() {\n      return this.heights.clear();\n    };\n\n    WebGLHeatmap.prototype.clamp = function(min, max) {\n      if (min == null) {\n        min = 0;\n      }\n      if (max == null) {\n        max = 1;\n      }\n      return this.heights.clamp(min, max);\n    };\n\n    WebGLHeatmap.prototype.multiply = function(value) {\n      if (value == null) {\n        value = 0.95;\n      }\n      return this.heights.multiply(value);\n    };\n\n    WebGLHeatmap.prototype.blur = function() {\n      return this.heights.blur();\n    };\n\n    WebGLHeatmap.prototype.addPoint = function(x, y, size, intensity) {\n      return this.heights.addPoint(x, y, size, intensity);\n    };\n\n    WebGLHeatmap.prototype.addPoints = function(items) {\n      var item, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = items.length; _i < _len; _i++) {\n        item = items[_i];\n        _results.push(this.addPoint(item.x, item.y, item.size, item.intensity));\n      }\n      return _results;\n    };\n\n    return WebGLHeatmap;\n\n  })();\n\n  window.createWebGLHeatmap = function(params) {\n    return new WebGLHeatmap(params);\n  };\n\n}).call(this);\n"],"sourceRoot":""}